name: Open Distro for Elasticsearch ODBC Driver

on: [push, pull_request]

jobs:    
  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: get-dependencies
      run: |
        brew unlink unixodbc
        brew install curl
        brew install cmake
        brew install libiodbc
    - name: configure
      run: |
        mkdir cmake-build
        cd cmake-build
        cmake ../src
        cd ..
    - name: cmake-build
      run: |
        cmake --build cmake-build
    #- name: test
    #  run: | 
    #    bash ./run_test_runner.sh
    - name: create-output
      if: always()
      run: |
        mkdir build
        mkdir test-output
        cp ./lib64/*.dylib build
        cp ./lib64/*.a build
        cp $(ls -d bin64/* | grep -v "\.") build
    #    cp ./bin64/*.html test-output
    #    cp ./bin64/*.log test-output
    - name: upload-build
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: mac-build
        path: build
    #- name: upload-test-results
    #  if: always()
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: mac-test-results
    #    path: test-output
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: |
        mkdir cmake-build
        cd cmake-build
        cmake ..\\src
        cd ..
    - name: cmake-build
      run: |
        cmake --build cmake-build --config Release
    #- name: test
    #  run: |
    #    cp .\\libraries\\VisualLeakDetector\\bin64\\*.* .\\bin64\\Release
    #    cp .\\libraries\\VisualLeakDetector\\lib64\\*.lib .\\lib64\\Release
    #    .\run_test_runner.bat
    - name: create-output
      if: always()
      run: |
        mkdir build
        mkdir test-output
        cp .\\bin64\\Release\\*.dll build
        cp .\\bin64\\Release\\*.exe build
        cp .\\lib64\\Release\\*.lib build
    #    cp .\\bin64\\Release\\*.log test-output
    #    cp .\\bin64\\Release\\*.html test-output
    - name: upload-build
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: windows-build
        path: build
    #- name: upload-test-results
    #  if: always()
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: windows-test-results
    #    path: test-output
